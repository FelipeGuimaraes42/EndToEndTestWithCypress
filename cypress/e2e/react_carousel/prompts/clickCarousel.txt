**CONTEXT**
Answer like a software engineer.
I have the Javascript code below and want you to create an E2E test case for it using Cypress syntax. The answer must be ONLY code, you don’t need to explain it.

**CODE EXPLANATION**
The code ahead is the HTML demonstration of the Carousel React Component. It is required to make carousel images on front-end. In this implementation, you can see two images at once, one highlighted and half of the others on the sides, if it exists.

**CODE** 
*HTML*
<div class="docs-post-content">
    <h2 id="click-to-change"><a href="#click-to-change" aria-label="click to change permalink" class="anchor"><svg
                aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
                <path fill-rule="evenodd"
                    d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
                </path>
            </svg></a>Click to change</h2>
    <p>By default, clicking the slides does nothing. You can change that behavior with the <code
            class="language-text">clickToChange</code> plugin. </p>

    <div class="gatsby-render-code">
        <div class="react-live">
            <div class="livePreviewWithError">
                <div class="react-live-preview">
                    <div class="BrainhubCarousel__container">
                        <div class="BrainhubCarousel">
                            <div class="BrainhubCarousel__trackContainer">
                                <ul class="BrainhubCarousel__track BrainhubCarousel__track--transition BrainhubCarousel__track--draggable"
                                    style="width: 2532.66px; transform: translateX(211px); margin-left: 0px; transition-duration: 500ms, 500ms;">
                                    <li class="BrainhubCarouselItem BrainhubCarouselItem--active BrainhubCarouselItem--clickable"
                                        style="margin-right: 0px; margin-left: 0px; width: 422px; max-width: 422px; min-width: 422px;">
                                        <img src="/react-carousel/static/mona-7a1ceae9bdb8c43272eb101c091c5408.jpg">
                                    </li>
                                    <li class="BrainhubCarouselItem BrainhubCarouselItem--clickable"
                                        style="margin-right: 0px; margin-left: 0px; width: 422px; max-width: 422px; min-width: 422px;">
                                        <img src="/react-carousel/static/scream-ee207a05c1e6fed03aafa156cc511abe.jpg">
                                    </li>
                                    <li class="BrainhubCarouselItem BrainhubCarouselItem--clickable"
                                        style="margin-right: 0px; margin-left: 0px; width: 422px; max-width: 422px; min-width: 422px;">
                                        <img
                                            src="/react-carousel/static/starry-night-39eed0a107ddb6c9f980eb3081a8bdd3.jpg">
                                    </li>
                                </ul>
                            </div>
    ...
</div>

**TEST CASES REQUEST**
I want you to create a test in Cypress syntax for each of the following use cases:
1) As a user, I want to click on an image to the right and see it highlighted.
2) As a user, I want to be able to click on an image to the right and return to the first one by clicking on the left.
3) As a user, I cannot be able to click on the left of the image if I'm already on the first image.
4) As a user, I cannot be able to click on the right of the image if I'm already on the last image. (Consider three clicks)
Remember that I want only the code, I don’t need ANY explanation.

**OBSERVATIONS**
Url is: https://brainhubeu.github.io/react-carousel/docs/examples/clickToChange
Assert highlighted image by its src, verifying if it contains the painting name. First is mona, second is scream and third is starry.